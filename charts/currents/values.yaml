# Default values for currents.

# nameOverride -- a string to override the chart name
# nameOverride:
# fullnameOverride:

# Currents App Configuration
currents:
  domains:
    # -- The host for the app
    # @section -- Required
    appHost: currents-app.localhost
    # -- The host for the recording endpoint that the test reporters communicate with
    # @section -- Required
    recordApiHost: currents-record.localhost
    # -- Whether to use https or http
    # @section -- Frequently Used
    https: true
  rootUser:
    # -- The email address of the root user
    email: 'admin@{{ .Values.currents.domains.appHost }}'
  # -- The image tag to use for the Currents images
  imageTag: 2025-10-02-001
  email:
    smtp:
      # -- The SMTP server port to use
      port: 587
      # -- The K8s secret key to use for the SMTP username
      # @section -- Frequently Used
      secretUserKey: username
      # -- The K8s secret key to use for the SMTP password
      # @section -- Frequently Used
      secretPasswordKey: password
      # -- (tpl/string) The email address to send from
      from: "Currents Report <report@{{ .Values.currents.domains.appHost }}>"
      # -- the SMTP server to use
      # @section -- Required
      host: ""
      # -- K8s secret to use for the SMTP username/password
      # @section -- Required
      secretName: ""
      # -- Whether the SMTP server uses TLS
      tls: false
  ingress:
    # -- Whether to enable the both default ingresses (server, and director)
    enabled: false
  apiJwtToken:
    # -- The K8s secret to use for the JWT token
    # @section -- Required
    secretName: ""
    # -- The K8s secret key to use for the JWT token
    # @section -- Frequently Used
    key: token
    # -- How often to expire session tokens signed by the JWT token
    expiry: 1d
  apiInternalToken:
    # -- The K8s secret to use for the internal API token
    # @section -- Required
    secretName: ""
    # -- The K8s secret key to use for the internal API token
    # @section -- Frequently Used
    key: token
  redis:
    # -- (tpl) set the redis hostname to talk to
    # @default -- `{{ .Release.Name }}-redis-master`
    host: "{{ .Release.Name }}-redis-master"
  elastic:
    datastreams:
      # -- The elasticsearch index to use for instances
      instances: currents_dev_instances
      # -- The elasticsearch index to use for tests
      tests: currents_dev_tests
      # -- The elasticsearch index to use for runs
      runs: currents_dev_runs
    admin:
      # -- The elasticsearch admin username (used to manage the indexes)
      # @section -- Frequently Used
      username: elastic
      # -- The k8s secret to use for the admin password
      # @section -- Required
      secretName: ""
      # -- The k8s secret key to use for the admin password
      # @section -- Required
      secretKey: ""
    apiUser:
      # -- The k8s secret to use for the elasticsearch api key
      # @section -- Required
      secretName: ""
      # -- The k8s secret key to use for the elasticsearch api ID
      # @section -- Frequently Used
      idKey: apiId
      # -- The k8s secret key to use for the elasticsearch api key
      # @section -- Frequently Used
      secretKey: apiKey
    tls:
      # -- Whether to use TLS for the elasticsearch connection
      # @section -- Frequently Used
      enabled: true
    # -- The elasticsearch host to use
    # @section -- Required
    host: ""
    # -- The elasticsearch port to use
    port: 9200
  objectStorage:
    # -- The object storage endpoint to use
    # @section -- Required
    endpoint: ""
    # -- The object storage internal endpoint to use (for internal communication)
    internalEndpoint: ""
    # -- The region to use for the object storage
    region: ""
    # -- The K8s secret to use for the object storage access key
    # @section -- Required
    secretName: ""
    # -- The K8s secret key to use for the object storage access key ID
    # @section -- Frequently Used
    secretIdKey: keyId
    # -- The K8s secret key to use for the object storage secret access key
    # @section -- Frequently Used
    secretAccessKey: keySecret
    # -- The object storage bucket to use
    # @section -- Required
    bucket: ""
    # -- Whether to use path style access for the object storage
    pathStyle: false
  logger:
    # -- The coralogix API endpoint to use
    apiEndpoint: ""
    # -- The k8s secret to use for the coralogix private key
    apiSecretName: ""
    # -- The k8s secret key to use for the coralogix private key
    apiSecretKey: apiKey
  mongoConnection:
    # -- The K8s secret to use for the MongoDB connection string
    # @section -- Required
    secretName: ""
    # -- The K8s secret key to use for the MongoDB connection string
    # @section -- Required
    key: ""
  gitlab:
    state:
      # -- The K8s secret to use for the GitLab state key
      # @section -- Required
      secretName: ""
      # -- The K8s secret key to use for the GitLab state key
      # @section -- Required
      secretKey: ""
# END Currents App Configuration

# Global Configuration
# applied to all Chart resources
global:
  # -- Reference to one or more secrets to be used when pulling images.
  # [Pull an Image from a Private Registry](https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/).
  # @section -- Frequently Used
  imagePullSecrets: []
  #  imagePullSecrets:
  #    - name: "image-pull-secret"
  # -- The image pull policy to use for all images
  imagePullPolicy: IfNotPresent
  # -- Labels to apply to all resources.
  additionalLabels: {}
  # -- This is for setting Kubernetes Annotations to a Pod
  podAnnotations: {}
  # -- Additional environment variables to pass to binary.
  env: []
  #  env:
  #  - name: SOME_VAR
  #    value: 'some value'

  # -- (dict) Container Security Context to be set on the pods
  # [Configure a Security Context for a Pod or Container](https://kubernetes.io/docs/tasks/configure-pod-container/security-context/).
  containerSecurityContext:
    allowPrivilegeEscalation: false
    capabilities:
      drop:
        - ALL
    readOnlyRootFilesystem: true
  # -- (dict) Pod Security Context.
  # [Configure a Security Context for a Pod or Container](https://kubernetes.io/docs/tasks/configure-pod-container/security-context/).
  securityContext:
    runAsNonRoot: true
    fsGroup: 1000
    runAsUser: 1000
    fsGroupChangePolicy: "OnRootMismatch"
    seccompProfile:
      type: RuntimeDefault
  # -- The number of old ReplicaSets to retain to allow rollback (if not set, the default Kubernetes value is set to 10).
  revisionHistoryLimit:
  # -- The optional priority class to be used for the currents pods.
  priorityClassName: ""
  # -- Additional volumes on the output Deployment definition.
  volumes: []
  # - name: foo
  #   secret:
  #     secretName: mysecret
  #     optional: false

  # -- Additional volumeMounts on the output Deployment definition.
  volumeMounts: []
  # - name: foo
  #   mountPath: "/etc/foo"
  #   readOnly: true

  # -- This default ensures that Pods are only scheduled to Linux nodes.
  # It prevents Pods being scheduled to Windows nodes in a mixed OS cluster.
  nodeSelector:
    kubernetes.io/os: linux
  tolerations: []
  affinity: {}
# END Global Configuration

# Director Configuration
director:
  name: director
  replicas: 1
  # This sets the container image more information can be found here: https://kubernetes.io/docs/concepts/containers/images/
  image:
    # -- The container registry to pull the manager image from.
    registry: 513558712013.dkr.ecr.us-east-1.amazonaws.com
    # -- The container image for Currents Director.
    repository: currents/on-prem/director
    # -- Override the image tag to deploy by setting this variable.
    tag: ""
    # -- Setting a digest will override any tag.
    digest: ""
    # digest: sha256:0e072dddd1f7f8fc8909a2ca6f65e76c5f0d2fcfb8be47935ae3457e8bbceb20

    # -- default to the same as global.image.pullPolicy
    pullPolicy: ""
  # -- Deployment update strategy for Currents deployment.
  # [Kubernetes documentation](https://kubernetes.io/docs/concepts/workloads/controllers/deployment/#strategy)
  deploymentStrategy: {}
  #  strategy:
  #    type: RollingUpdate
  #    rollingUpdate:
  #      maxSurge: 0
  #      maxUnavailable: 1

  # -- Env variables to pass to the container
  env: []
  # -- Additional volumes on the output Deployment definition.
  volumes: []
  # -- Additional volumeMounts on the output Deployment definition.
  volumeMounts: []
  # -- Liveness probe to check if the container is alive
  livenessProbe:
    httpGet:
      path: /
      port: http
  # -- Readiness probe to check if the container is ready
  readinessProbe:
    httpGet:
      path: /
      port: http
  # -- Resources to provide
  # [Resource Management for Pods and Containers](https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/)
  # @section -- Frequently Used
  resources: {}
  #  requests:
  #    cpu: 10m
  #    memory: 32Mi

  # -- [Node selector]
  # @default -- `{}` (defaults to global.nodeSelector)
  nodeSelector: {}
  # -- [Tolerations] for use with node taints
  # @default -- `[]` (defaults to global.tolerations)
  tolerations: []
  # -- Assign custom [affinity] rules to the deployment
  # @default -- `{}` (defaults to the global.affinity preset)
  affinity: {}
  # -- This is for setting up a service [more information](https://kubernetes.io/docs/concepts/services-networking/service/)
  service:
    type: ClusterIP
    port: 1234
  ingress:
    # -- Whether to enable the director ingress
    # @default -- `false` (but can also be turned on by currents.ingress.enabled)
    # @section -- Frequently Used
    enabled: false
    # -- The ingress class to use
    # @section -- Frequently Used
    className: ""
    # -- Annotations to add to the ingress
    # @section -- Frequently Used
    annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"

    # -- The hosts to use for the ingress
    # @default -- see [values.yaml] for default values
    # @section -- Frequently Used
    hosts:
      - host: "{{ .Values.currents.domains.recordApiHost }}"
        paths:
          - path: /
            pathType: Prefix
    # -- The TLS configuration for the ingress
    # @default -- see [values.yaml] for default values
    # @section -- Frequently Used
    tls: []
    #  - secretName: chart-example-tls
    #    hosts:
    #      - chart-example.local
# END Director Configuration

# Server Configuration
server:
  name: server
  replicas: 1
  # This sets the container image more information can be found here: https://kubernetes.io/docs/concepts/containers/images/
  image:
    # -- The container registry to pull the manager image from
    registry: 513558712013.dkr.ecr.us-east-1.amazonaws.com
    # -- The container image for Currents Server API
    repository: currents/on-prem/api
    # -- Override the image tag to deploy by setting this variable
    tag: ""
    # -- Setting a digest will override any tag
    digest: ""
    # digest: sha256:0e072dddd1f7f8fc8909a2ca6f65e76c5f0d2fcfb8be47935ae3457e8bbceb20

    # -- defaults to global.image.pullPolicy
    pullPolicy: ""
  # -- Deployment update strategy for Currents deployment
  deploymentStrategy: {}
  #  strategy:
  #    type: RollingUpdate
  #    rollingUpdate:
  #      maxSurge: 0
  #      maxUnavailable: 1

  # -- Env variables to pass to the container
  env: []
  # -- Additional volumes on the output Deployment definition
  volumes: []
  # -- Additional volumeMounts on the output Deployment definition
  volumeMounts: []
  # -- Liveness probe to check if the container is alive
  livenessProbe:
    httpGet:
      path: /
      port: http
  # -- Readiness probe to check if the container is ready
  readinessProbe:
    httpGet:
      path: /
      port: http
  # -- Resources to provide
  # [Resource Management for Pods and Containers](https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/)
  # @section -- Frequently Used
  resources: {}
  #  requests:
  #    cpu: 10m
  #    memory: 32Mi

  # -- [Node selector]
  # @default -- `{}` (defaults to global.nodeSelector)
  nodeSelector: {}
  # -- [Tolerations] for use with node taints
  # @default -- `[]` (defaults to global.tolerations)
  tolerations: []
  # -- Assign custom [affinity] rules to the deployment
  # @default -- `{}` (defaults to the global.affinity preset)
  affinity: {}
  # -- This is for setting up a service [more information](https://kubernetes.io/docs/concepts/services-networking/service/)
  service:
    type: ClusterIP
    port: 4000
  # This block is for setting up the ingress for more information can be found here: https://kubernetes.io/docs/concepts/services-networking/ingress/
  ingress:
    # -- Whether to enable the server ingress
    # @default -- `false` (but can also be turned on by currents.ingress.enabled)
    # @section -- Frequently Used
    enabled: false
    # -- The ingress class to use
    # @section -- Frequently Used
    className: ""
    # -- Annotations to add to the ingress
    # @section -- Frequently Used
    annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"

    # -- The hosts to use for the ingress
    # @default -- see [values.yaml] for default values
    # @section -- Frequently Used
    hosts:
      - host: "{{ .Values.currents.domains.appHost }}"
        paths:
          - path: /
            pathType: Prefix
    # -- The TLS configuration for the ingress
    # @default -- see [values.yaml] for default values
    # @section -- Frequently Used
    tls: []
    #  - secretName: chart-example-tls
    #    hosts:
    #      - chart-example.local
# Server Configuration

# Writer Configuration
writer:
  name: writer
  replicas: 1
  # This sets the container image more information can be found here: https://kubernetes.io/docs/concepts/containers/images/
  image:
    # The container registry to pull the manager image from
    registry: 513558712013.dkr.ecr.us-east-1.amazonaws.com
    # The container image for Currents Server API.
    repository: currents/on-prem/writer
    # -- Override the image tag to deploy by setting this variable
    tag: ""
    # -- Setting a digest will override any tag
    digest: ""
    # digest: sha256:0e072dddd1f7f8fc8909a2ca6f65e76c5f0d2fcfb8be47935ae3457e8bbceb20

    # -- defaults to global.image.pullPolicy
    pullPolicy: ""
  # -- Deployment update strategy for Currents deployment
  deploymentStrategy: {}
  #  strategy:
  #    type: RollingUpdate
  #    rollingUpdate:
  #      maxSurge: 0
  #      maxUnavailable: 1

  # -- Env variables to pass to the container
  env: []
  # -- Additional volumes on the output Deployment definition
  volumes: []
  # -- Additional volumeMounts on the output Deployment definition
  volumeMounts: []
  # -- Liveness probe to check if the container is alive
  livenessProbe:
    exec:
      command:
        - ./node_modules/.bin/pm2
        - show
        - writer-service
  # -- Readiness probe to check if the container is ready
  readinessProbe:
    exec:
      command:
        - ./node_modules/.bin/pm2
        - show
        - writer-service
  # -- Resources to provide
  # [Resource Management for Pods and Containers](https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/)
  # @section -- Frequently Used
  # @default -- `{}` (defaults to global.resources)
  resources: {}
  # -- [Node selector]
  # @default -- `{}` (defaults to global.nodeSelector)
  nodeSelector: {}
  # -- [Tolerations] for use with node taints
  # @default -- `[]` (defaults to global.tolerations)
  tolerations: []
  # -- Assign custom [affinity] rules to the deployment
  # @default -- `{}` (defaults to the global.affinity preset)
  affinity: {}
# END Writer Configuration

# Scheduler Configuration
scheduler:
  name: scheduler
  # This sets the container image more information can be found here: https://kubernetes.io/docs/concepts/containers/images/
  image:
    # -- The container registry to pull the manager image from
    registry: 513558712013.dkr.ecr.us-east-1.amazonaws.com
    # -- The container image for Currents Server API
    repository: currents/on-prem/scheduler
    # -- Override the image tag to deploy by setting this variable
    tag: ""
    # -- Setting a digest will override any tag
    digest: ""
    # digest: sha256:0e072dddd1f7f8fc8909a2ca6f65e76c5f0d2fcfb8be47935ae3457e8bbceb20

    # -- defaults to global.image.pullPolicy
    pullPolicy: ""
  startup:
    # -- Persistence settings used to optimize startup tasks (avoid rerun startup tasks on restart)
    # @default -- See [values.yaml] for default values
    persistence:
      accessMode: ReadWriteOnce
      size: 10Mi
      subPath: ""
      ## if volumeName is set, use this existing PersistentVolume
      # volumeName:
      matchLabels: {}
      matchExpressions: []
  # -- Deployment update strategy for Currents deployment.
  # [Kubernetes documentation](https://kubernetes.io/docs/concepts/workloads/controllers/deployment/#strategy)
  deploymentStrategy:
    type: Recreate
  # -- Env variables to pass to the container
  env: []
  # -- Additional volumes on the output Deployment definition
  volumes: []
  # -- Additional volumeMounts on the output Deployment definition
  volumeMounts: []
  # -- Liveness probe to check if the container is alive
  livenessProbe:
    exec:
      command:
        - ./node_modules/.bin/pm2
        - show
        - dist
  # -- Readiness probe to check if the container is ready
  readinessProbe:
    exec:
      command:
        - ./node_modules/.bin/pm2
        - show
        - dist
  # -- Resources to provide
  # [Resource Management for Pods and Containers](https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/)
  # @section -- Frequently Used
  # @default -- `{}` (defaults to global.resources)
  resources: {}
  # -- [Node selector]
  # @default -- `{}` (defaults to global.nodeSelector)
  nodeSelector: {}
  # -- [Tolerations] for use with node taints
  # @default -- `[]` (defaults to global.tolerations)
  tolerations: []
  # -- Assign custom [affinity] rules to the deployment
  # @default -- `{}` (defaults to the global.affinity preset)
  affinity: {}
# END Scheduler Configuration

# Change Streams Configuration
changestreams:
  name: change-streams
  # This sets the container image more information can be found here: https://kubernetes.io/docs/concepts/containers/images/
  image:
    # -- The container registry to pull the manager image from.
    registry: 513558712013.dkr.ecr.us-east-1.amazonaws.com
    # -- The container image for Currents Change Streams Image
    repository: currents/on-prem/change-streams
    # -- Override the image tag to deploy by setting this variable
    tag: ""
    # -- Setting a digest will override any tag
    digest: ""
    # digest: sha256:0e072dddd1f7f8fc8909a2ca6f65e76c5f0d2fcfb8be47935ae3457e8bbceb20

    # -- defaults to global.image.pullPolicy
    pullPolicy: ""
  # -- Deployment update strategy for Currents deployment.
  # [Kubernetes documentation](https://kubernetes.io/docs/concepts/workloads/controllers/deployment/#strategy)
  deploymentStrategy:
    type: Recreate
  # -- Env variables to pass to the container
  env: []
  # -- Additional volumes on the output Deployment definition
  volumes: []
  # -- Additional volumeMounts on the output Deployment definition
  volumeMounts: []
  # -- Liveness probe to check if the container is alive
  # -- Resources to provide
  # [Resource Management for Pods and Containers](https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/)
  # @section -- Frequently Used
  # @default -- `{}` (defaults to global.resources)
  resources: {}
  # -- [Node selector]
  # @default -- `{}` (defaults to global.nodeSelector)
  nodeSelector: {}
  # -- [Tolerations] for use with node taints
  # @default -- `[]` (defaults to global.tolerations)
  tolerations: []
  # -- Assign custom [affinity] rules to the deployment
  # @default -- `{}` (defaults to the global.affinity preset)
  affinity: {}
# END Change Streams Configuration

# Webhooks Configuration
webhooks:
  name: webhooks
  # This sets the container image more information can be found here: https://kubernetes.io/docs/concepts/containers/images/
  image:
    # The container registry to pull the manager image from.
    registry: 513558712013.dkr.ecr.us-east-1.amazonaws.com
    # The container image for Currents Webhooks Image
    repository: currents/on-prem/webhooks
    # -- Override the image tag to deploy by setting this variable
    tag: ""
    # -- Setting a digest will override any tag
    digest: ""
    # digest: sha256:0e072dddd1f7f8fc8909a2ca6f65e76c5f0d2fcfb8be47935ae3457e8bbceb20

    # -- defaults to global.image.pullPolicy
    pullPolicy: ""
  # -- Deployment update strategy for Currents deployment.
  # [Kubernetes documentation](https://kubernetes.io/docs/concepts/workloads/controllers/deployment/#strategy)
  deploymentStrategy:
    type: Recreate
  # -- Env variables to pass to the container
  env: []
  # -- Additional volumes on the output Deployment definition
  volumes: []
  # -- Additional volumeMounts on the output Deployment definition
  volumeMounts: []
  # -- Liveness probe to check if the container is alive
  livenessProbe:
    exec:
      command:
        - ./node_modules/.bin/pm2
        - show
        - dist
  # -- Readiness probe to check if the container is ready
  readinessProbe:
    exec:
      command:
        - ./node_modules/.bin/pm2
        - show
        - dist
  # -- Liveness probe to check if the container is alive
  # -- Resources to provide
  # [Resource Management for Pods and Containers](https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/)
  # @section -- Frequently Used
  # @default -- `{}` (defaults to global.resources)
  resources: {}
  # -- [Node selector]
  # @default -- `{}` (defaults to global.nodeSelector)
  nodeSelector: {}
  # -- [Tolerations] for use with node taints
  # @default -- `[]` (defaults to global.tolerations)
  tolerations: []
  # -- Assign custom [affinity] rules to the deployment
  # @default -- `{}` (defaults to the global.affinity preset)
  affinity: {}
# END Webhooks Configuration

# Service Account Configuration
# This section builds out the service account more information can be found here: https://kubernetes.io/docs/concepts/security/service-accounts/
serviceAccount:
  # -- Specifies whether a service account should be created
  create: true
  # -- The name of the service account to use.
  # @default -- If not set and create is true, a name is generated using the fullname template
  name: ""
  # -- Optional additional annotations to add to the Service Account. Templates are allowed for both keys and values.
  annotations: {}
  # annotations:
  #   "{{ .Chart.Name }}-helm-chart/version": "{{ .Chart.Version }}"

  # -- Automatically mount a ServiceAccount's API credentials?
  automount: true
# END Service Account Configuration

# Redis Configuration
# The included redis CAN be used in production, but you won't have high availability during version upgrades
redis:
  # -- enable the Bitnami Redis chart. Refer to https://github.com/bitnami/charts/blob/main/bitnami/redis/ for possible values.
  # @section -- Required
  enabled: false
  image:
    repository: redis/redis-stack-server
    tag: 7.2.0-v15
  commonConfiguration: |-
    loadmodule /opt/redis-stack/lib/rejson.so
  architecture: standalone
  auth:
    enabled: false
  master:
    resourcesPreset: "none"
  replica:
    resourcesPreset: "none"
  sentinel:
    resourcesPreset: "none"
  metrics:
    resourcesPreset: "none"
  volumePermissions:
    resourcesPreset: "none"
  sysctl:
    resourcesPreset: "none"
# END Redis Configuration
