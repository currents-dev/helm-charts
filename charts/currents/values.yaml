# Default values for currents.

# This is to override the chart name.
# nameOverride: "my-currents"
# fullnameOverride: "my-currents"

global:
  # Reference to one or more secrets to be used when pulling images.
  # For more information, see [Pull an Image from a Private Registry](https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/).
  #
  # For example:
  #  imagePullSecrets:
  #    - name: "image-pull-secret"
  imagePullSecrets: []
  imagePullPolicy: IfNotPresent

  # Labels to apply to all resources.
  additionalLabels: {}

  # This is for setting Kubernetes Annotations to a Pod.
  # For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
  podAnnotations: {}

  # Additional environment variables to pass to binary.
  # For example:
  #  env:
  #  - name: SOME_VAR
  #    value: 'some value'
  env: []

  # Container Security Context to be set on the pods
  # For more information, see [Configure a Security Context for a Pod or Container](https://kubernetes.io/docs/tasks/configure-pod-container/security-context/).
  containerSecurityContext:
    allowPrivilegeEscalation: false
    capabilities:
      drop:
      - ALL
    readOnlyRootFilesystem: true

  # Pod Security Context.
  # For more information, see [Configure a Security Context for a Pod or Container](https://kubernetes.io/docs/tasks/configure-pod-container/security-context/).
  securityContext:
    runAsNonRoot: true
    fsGroup: 1000
    runAsUser: 1000
    fsGroupChangePolicy: "OnRootMismatch"
    seccompProfile:
      type: RuntimeDefault

  # The number of old ReplicaSets to retain to allow rollback (if not set, the default Kubernetes value is set to 10).
  # revisionHistoryLimit: 1

  # The optional priority class to be used for the currents pods.
  priorityClassName: ""

  # Additional volumes on the output Deployment definition.
  volumes: []
  # - name: foo
  #   secret:
  #     secretName: mysecret
  #     optional: false

  # Additional volumeMounts on the output Deployment definition.
  volumeMounts: []
  # - name: foo
  #   mountPath: "/etc/foo"
  #   readOnly: true

  # This default ensures that Pods are only scheduled to Linux nodes.
  # It prevents Pods being scheduled to Windows nodes in a mixed OS cluster.
  nodeSelector:
    kubernetes.io/os: linux
  tolerations: []
  affinity: {}

currents:
  domains:
    https: true
    # This is the host for the app
    appHost: currents-app.localhost
    # This is the host for the recording endpoint that the test reporters communicate with
    recordApiHost: currents-record.localhost
  rootUser:
    email: 'admin@{{ .Values.currents.domains.appHost }}'
  imageTag: 2025-04-08-001

  email:
    smtp:
      port: 587
      secretUserKey: username
      secretPasswordKey: password
      from: "Currents Report <report@{{ .Values.currents.domains.appHost }}>"
      # host: smtp.mailgun.org
      # secretName: currents-email-smtp
      # tls: false

  ingress:
    enabled: false

  apiJwtToken:
    # secretName: currents-api-jwt-token
    key: token
    expiry: 1d
  apiInternalToken:
    # secretName: currents-api-internal-token
    key: token

  redis:
    # -- set the redis hostname to talk to
    # @default -- `{{ .Release.Name }}-redis-master`
    host: "{{ .Release.Name }}-redis-master"
    password: ""
  elastic:
    datastreams:
      instances: currents_dev_instances
      tests: currents_dev_tests
      runs: currents_dev_runs
    admin:
      username: elastic
      # secretName:
      # secretKey:
    apiUser:
      # secretName:
      idKey: apiId
      secretKey: apiKey
    tls:
      enabled: true
    host: ""
    port: 9200
  objectStorage:
    # endpoint: ""
    # internalEndpoint: ""
    # secretName: ""
    secretIdKey: keyId
    secretAccessKey: keySecret
    # bucket: ""
    # pathStyle: false
  logger:
    apiEndpoint: ""
    apiSecretName: ""
    apiSecretKey: apiKey
  mongoConnection: {}
  gitlab:
    state: {}
      # secretName: ''
      # secretKey: ''


director:
  name: director
  replicas: 1
  # This sets the container image more information can be found here: https://kubernetes.io/docs/concepts/containers/images/
  image:
    # The container registry to pull the manager image from.
    registry: 513558712013.dkr.ecr.us-east-1.amazonaws.com

    # The container image for Currents Director.
    repository: currents/on-prem/director

    # Override the image tag to deploy by setting this variable.
    # If no value is set, the chart's appVersion is used.
    # tag: vX.Y.Z

    # Setting a digest will override any tag.
    # digest: sha256:0e072dddd1f7f8fc8909a2ca6f65e76c5f0d2fcfb8be47935ae3457e8bbceb20

    # defaults to global.image.pullPolicy
    pullPolicy: ""

  # Deployment update strategy for Currents deployment.
  # For more information, see the [Kubernetes documentation](https://kubernetes.io/docs/concepts/workloads/controllers/deployment/#strategy).
  #
  # For example:
  #  strategy:
  #    type: RollingUpdate
  #    rollingUpdate:
  #      maxSurge: 0
  #      maxUnavailable: 1
  deploymentStrategy: {}
  env: []
  volumes: []
  volumeMounts: []
  livenessProbe:
    httpGet:
      path: /
      port: http
  readinessProbe:
    httpGet:
      path: /
      port: http
  # Resources to provide
  #
  # For example:
  #  requests:
  #    cpu: 10m
  #    memory: 32Mi
  #
  # For more information, see [Resource Management for Pods and Containers](https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/).
  resources: {}
  # -- [Node selector]
  # @default -- `{}` (defaults to global.nodeSelector)
  nodeSelector: {}

  # -- [Tolerations] for use with node taints
  # @default -- `[]` (defaults to global.tolerations)
  tolerations: []

  # -- Assign custom [affinity] rules to the deployment
  # @default -- `{}` (defaults to the global.affinity preset)
  affinity: {}

  # This is for setting up a service more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/
  service:
    # This sets the service type more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types
    type: ClusterIP
    # This sets the ports more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/#field-spec-ports
    port: 1234

  # This block is for setting up the ingress for more information can be found here: https://kubernetes.io/docs/concepts/services-networking/ingress/
  ingress:
    enabled: false
    # className: ""
    annotations: {}
      # kubernetes.io/ingress.class: nginx
      # kubernetes.io/tls-acme: "true"
    hosts:
      - host: "{{ .Values.currents.domains.recordApiHost }}"
        paths:
          - path: /
            pathType: Prefix
    tls: []
    #  - secretName: chart-example-tls
    #    hosts:
    #      - chart-example.local

server:
  name: server
  replicas: 1
  # This sets the container image more information can be found here: https://kubernetes.io/docs/concepts/containers/images/
  image:
    # The container registry to pull the manager image from.
    registry: 513558712013.dkr.ecr.us-east-1.amazonaws.com

    # The container image for Currents Server API.
    repository: currents/on-prem/api

    # Override the image tag to deploy by setting this variable.
    # If no value is set, the chart's appVersion is used.
    # tag: vX.Y.Z

    # Setting a digest will override any tag.
    # digest: sha256:0e072dddd1f7f8fc8909a2ca6f65e76c5f0d2fcfb8be47935ae3457e8bbceb20

    # defaults to global.image.pullPolicy
    pullPolicy: ""

  # Deployment update strategy for Currents deployment.
  # For more information, see the [Kubernetes documentation](https://kubernetes.io/docs/concepts/workloads/controllers/deployment/#strategy).
  #
  # For example:
  #  strategy:
  #    type: RollingUpdate
  #    rollingUpdate:
  #      maxSurge: 0
  #      maxUnavailable: 1
  deploymentStrategy: {}
  env: []
  volumes: []
  volumeMounts: []
  livenessProbe:
    httpGet:
      path: /
      port: http
  readinessProbe:
    httpGet:
      path: /
      port: http
  # Resources to provide
  #
  # For example:
  #  requests:
  #    cpu: 10m
  #    memory: 32Mi
  #
  # For more information, see [Resource Management for Pods and Containers](https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/).
  resources: {}
  # -- [Node selector]
  # @default -- `{}` (defaults to global.nodeSelector)
  nodeSelector: {}

  # -- [Tolerations] for use with node taints
  # @default -- `[]` (defaults to global.tolerations)
  tolerations: []

  # -- Assign custom [affinity] rules to the deployment
  # @default -- `{}` (defaults to the global.affinity preset)
  affinity: {}

  # This is for setting up a service more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/
  service:
    # This sets the service type more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types
    type: ClusterIP
    # This sets the ports more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/#field-spec-ports
    port: 4000

  # This block is for setting up the ingress for more information can be found here: https://kubernetes.io/docs/concepts/services-networking/ingress/
  ingress:
    enabled: false
    # className: ""
    annotations: {}
      # kubernetes.io/ingress.class: nginx
      # kubernetes.io/tls-acme: "true"
    hosts:
      - host: "{{ .Values.currents.domains.appHost }}"
        paths:
          - path: /
            pathType: Prefix
    tls: []
    #  - secretName: chart-example-tls
    #    hosts:
    #      - chart-example.local

writer:
  name: writer
  replicas: 1
  # This sets the container image more information can be found here: https://kubernetes.io/docs/concepts/containers/images/
  image:
    # The container registry to pull the manager image from.
    registry: 513558712013.dkr.ecr.us-east-1.amazonaws.com

    # The container image for Currents Server API.
    repository: currents/on-prem/writer

    # Override the image tag to deploy by setting this variable.
    # If no value is set, the chart's appVersion is used.
    # tag: vX.Y.Z

    # Setting a digest will override any tag.
    # digest: sha256:0e072dddd1f7f8fc8909a2ca6f65e76c5f0d2fcfb8be47935ae3457e8bbceb20

    # defaults to global.image.pullPolicy
    pullPolicy: ""
  deploymentStrategy: {}
  env: []
  volumes: []
  volumeMounts: []
  livenessProbe:
    exec:
      command:
        - ./node_modules/.bin/pm2
        - show
        - writer-service
  readinessProbe:
    exec:
      command:
        - ./node_modules/.bin/pm2
        - show
        - writer-service
  resources: {}
  # -- [Node selector]
  # @default -- `{}` (defaults to global.nodeSelector)
  nodeSelector: {}

  # -- [Tolerations] for use with node taints
  # @default -- `[]` (defaults to global.tolerations)
  tolerations: []

  # -- Assign custom [affinity] rules to the deployment
  # @default -- `{}` (defaults to the global.affinity preset)
  affinity: {}

scheduler:
  name: scheduler
  # This sets the container image more information can be found here: https://kubernetes.io/docs/concepts/containers/images/
  image:
    # The container registry to pull the manager image from.
    registry: 513558712013.dkr.ecr.us-east-1.amazonaws.com

    # The container image for Currents Server API.
    repository: currents/on-prem/scheduler

    # Override the image tag to deploy by setting this variable.
    # If no value is set, the chart's appVersion is used.
    # tag: vX.Y.Z

    # Setting a digest will override any tag.
    # digest: sha256:0e072dddd1f7f8fc8909a2ca6f65e76c5f0d2fcfb8be47935ae3457e8bbceb20

    # defaults to global.image.pullPolicy
    pullPolicy: ""
  startup:
    persistence:
      accessMode: ReadWriteOnce
      size: 10Mi
      subPath: ""
      ## if volumeName is set, use this existing PersistentVolume
      # volumeName:
      matchLabels: {}
      matchExpressions: []

  # Deployment update strategy for Currents deployment.
  # For more information, see the [Kubernetes documentation](https://kubernetes.io/docs/concepts/workloads/controllers/deployment/#strategy).
  deploymentStrategy:
    type: Recreate
  env: []
  volumes: []
  volumeMounts: []
  livenessProbe:
    exec:
      command:
        - ./node_modules/.bin/pm2
        - show
        - dist
  readinessProbe:
    exec:
      command:
        - ./node_modules/.bin/pm2
        - show
        - dist
  # Resources to provide
  #
  # For example:
  #  requests:
  #    cpu: 10m
  #    memory: 32Mi
  #
  # For more information, see [Resource Management for Pods and Containers](https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/).
  resources: {}
  # -- [Node selector]
  # @default -- `{}` (defaults to global.nodeSelector)
  nodeSelector: {}

  # -- [Tolerations] for use with node taints
  # @default -- `[]` (defaults to global.tolerations)
  tolerations: []

  # -- Assign custom [affinity] rules to the deployment
  # @default -- `{}` (defaults to the global.affinity preset)
  affinity: {}

changestreams:
  name: change-streams
  # This sets the container image more information can be found here: https://kubernetes.io/docs/concepts/containers/images/
  image:
    # The container registry to pull the manager image from.
    registry: 513558712013.dkr.ecr.us-east-1.amazonaws.com

    # The container image for Currents Change Streams Image
    repository: currents/on-prem/change-streams

    # Override the image tag to deploy by setting this variable.
    # If no value is set, the chart's appVersion is used.
    # tag: vX.Y.Z

    # Setting a digest will override any tag.
    # digest: sha256:0e072dddd1f7f8fc8909a2ca6f65e76c5f0d2fcfb8be47935ae3457e8bbceb20

    # defaults to global.image.pullPolicy
    pullPolicy: ""
  deploymentStrategy:
    type: Recreate
  env: []
  volumes: []
  volumeMounts: []
  resources: {}
  # -- [Node selector]
  # @default -- `{}` (defaults to global.nodeSelector)
  nodeSelector: {}

  # -- [Tolerations] for use with node taints
  # @default -- `[]` (defaults to global.tolerations)
  tolerations: []

  # -- Assign custom [affinity] rules to the deployment
  # @default -- `{}` (defaults to the global.affinity preset)
  affinity: {}

webhooks:
  name: webhooks
  # This sets the container image more information can be found here: https://kubernetes.io/docs/concepts/containers/images/
  image:
    # The container registry to pull the manager image from.
    registry: 513558712013.dkr.ecr.us-east-1.amazonaws.com

    # The container image for Currents Webhooks Image
    repository: currents/on-prem/webhooks

    # Override the image tag to deploy by setting this variable.
    # If no value is set, the chart's appVersion is used.
    # tag: vX.Y.Z

    # Setting a digest will override any tag.
    # digest: sha256:0e072dddd1f7f8fc8909a2ca6f65e76c5f0d2fcfb8be47935ae3457e8bbceb20

    # defaults to global.image.pullPolicy
    pullPolicy: ""
  deploymentStrategy:
    type: Recreate
  env: []
  volumes: []
  volumeMounts: []
  livenessProbe:
    exec:
      command:
        - ./node_modules/.bin/pm2
        - show
        - dist
  readinessProbe:
    exec:
      command:
        - ./node_modules/.bin/pm2
        - show
        - dist
  resources: {}
  # -- [Node selector]
  # @default -- `{}` (defaults to global.nodeSelector)
  nodeSelector: {}

  # -- [Tolerations] for use with node taints
  # @default -- `[]` (defaults to global.tolerations)
  tolerations: []

  # -- Assign custom [affinity] rules to the deployment
  # @default -- `{}` (defaults to the global.affinity preset)
  affinity: {}

# This section builds out the service account more information can be found here: https://kubernetes.io/docs/concepts/security/service-accounts/
serviceAccount:
  # Specifies whether a service account should be created
  create: true

  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  # name: ""

  # Optional additional annotations to add to the Service Account. Templates are allowed for both keys and values.
  # Example using templating:
  # annotations:
  #   "{{ .Chart.Name }}-helm-chart/version": "{{ .Chart.Version }}"
  # annotations: {}

  # Automatically mount a ServiceAccount's API credentials?
  automount: true


# The included redis CAN be used in production, but you won't have high availability during version upgrades
redis:
  # -- enable the Bitnami Redis chart. Refer to https://github.com/bitnami/charts/blob/main/bitnami/redis/ for possible values.
  enabled: false
  image:
    repository: redis/redis-stack-server
    tag: 7.2.0-v15
  commonConfiguration: |-
    loadmodule /opt/redis-stack/lib/rejson.so
  architecture: standalone
  auth:
    enabled: false
  master:
    resourcesPreset: "none"
  replica:
    resourcesPreset: "none"
  sentinel:
    resourcesPreset: "none"
  metrics:
    resourcesPreset: "none"
  volumePermissions:
    resourcesPreset: "none"
  sysctl:
    resourcesPreset: "none"
